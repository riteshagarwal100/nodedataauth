import {RoleModel} from './rolemodel';
import {onetomany, manytoone, manytomany} from 'nodedata/core/decorators'; 
import {field, document} from 'nodedata/mongoose/decorators';
import {IUser} from './user';
import {Types} from 'mongoose';
import {Strict} from 'nodedata/mongoose/enums';

@document({ name: 'users', strict: Strict.false })
export class UserModel {
    @field({ primary: true, autogenerated: true })
    _id: Types.ObjectId;

    @field()
    name: string;

    @field({ itemType: String})
    courses: Array<string>;

    @field()
    email: string;

    @field()
    accessToken: string;

    @field()
    refreshToken: string;

    @field()
    password: string;

    @field()
    age: string;

    @manytomany({ rel: 'roles', itemType: RoleModel, embedded: true, persist: true, eagerLoading: true })
    roles: Array<RoleModel>;

    _links: any;  
    
    // constructor(){
    //     this._id=0;
    //     this.name="";
    //     this.roles=new Array<RoleModel>();
    // }
    constructor(userDto: IUser) {
        userDto = userDto ? userDto : <any>{};
        this._links = {};
        this._id = <any>userDto._id;
        this.name = userDto.name;
        //this.age = userDto.age;
        //this.password = userDto.password;
        //this.email = userDto.email;
        if (userDto.roles)
            this.roles = userDto.roles;
        else
            this.roles = new Array<RoleModel>();
    }
}

export default UserModel;